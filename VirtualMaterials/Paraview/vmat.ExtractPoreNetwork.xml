<CustomFilterDefinitions>
  <CustomProxyDefinition name="vmat.ExtractPoreNetwork" group="filters">
    <CompoundSourceProxy id="7867" servers="1">
      <Proxy group="filters" type="ProgrammableFilter" id="7756" servers="1" compound_name="ProgrammableFilter1">
        <Property name="CopyArrays" id="7756.CopyArrays" number_of_elements="1">
          <Element index="0" value="0"/>
          <Domain name="bool" id="7756.CopyArrays.bool"/>
        </Property>
        <Property name="InformationScript" id="7756.InformationScript" number_of_elements="1">
          <Element index="0" value="from paraview import util&#xa; &#xa;inInfo = self.GetExecutive().GetInputInformation(0,0)&#xa;shape=inInfo.Get(vtk.vtkStreamingDemandDrivenPipeline.WHOLE_EXTENT())&#xa;&#xa;util.SetOutputWholeExtent(self, shape)"/>
        </Property>
        <Property name="Input" id="7756.Input" number_of_elements="1">
          <Domain name="groups" id="7756.Input.groups"/>
          <Domain name="input_type" id="7756.Input.input_type"/>
        </Property>
        <Property name="OutputDataSetType" id="7756.OutputDataSetType" number_of_elements="1">
          <Element index="0" value="8"/>
          <Domain name="enum" id="7756.OutputDataSetType.enum">
            <Entry value="8" text="Same as Input"/>
            <Entry value="0" text="vtkPolyData"/>
            <Entry value="2" text="vtkStructuredGrid"/>
            <Entry value="3" text="vtkRectilinearGrid"/>
            <Entry value="4" text="vtkUnstructuredGrid"/>
            <Entry value="6" text="vtkImageData"/>
            <Entry value="10" text="vtkUniformGrid"/>
            <Entry value="13" text="vtkMultiblockDataSet"/>
            <Entry value="15" text="vtkHierarchicalBoxDataSet"/>
            <Entry value="19" text="vtkTable"/>
          </Domain>
        </Property>
        <Property name="PythonPath" id="7756.PythonPath" number_of_elements="1">
          <Element index="0" value=""/>
        </Property>
        <Property name="Script" id="7756.Script" number_of_elements="1">
          <Element index="0" value="#--------Parameters---------------------------- &#xa;&#xa;phases={&#x27;void&#x27;:0}    #phases: python dictionary {&#x27;PhaseName&#x27;:PhaseCode in image...} &#xa;&#xa;#file on disk where to save PNM data &#xa;outputFilename = &#x27;foo_extractionResults.mat&#x27; &#xa;&#xa;&#xa;#------------Script----------------------------------- &#xa;#---------Ne pas modifier ci-dessous----------------------- &#xa; &#xa;import VirtualMaterials as vmat&#xa;import numpy as np&#xa;   &#xa;pdi = self.GetInputDataObject(0,0)&#xa;numpyInputImage=vmat.Utilities.Utilities.VTKImageToNumpy(pdi)&#xa;&#xa;  &#xa;#Perform pores segmentation&#xa;print(&#x27;PoresWatershedSegmentation&#x27;)&#xa; &#xa;hContrast=4&#xa;   &#xa;ExtractionResult = vmat.Simulation.PoreNetworkExtraction.ExtractNetwork(&#xa;                                                image=numpyInputImage,phases=phases,&#xa;                                                seedMethod=&#x27;hMaxima&#x27;,seedParam=hContrast)         &#xa;    &#xa;pores = ExtractionResult[&#x27;imagePores&#x27;]  &#xa;  &#xa;vmat.Simulation.PoreNetworkExtraction.SaveResults(outputFilename,ExtractionResult)    &#xa;&#xa;&#xa;vtkOutputImage=vmat.Utilities.Utilities.NumpyToVTKImage(pores)&#xa;inInfo = self.GetExecutive().GetInputInformation(0,0)&#xa;wholeExtent=inInfo.Get(vtk.vtkStreamingDemandDrivenPipeline.WHOLE_EXTENT())&#xa;vtkOutputImage.SetExtent(wholeExtent)&#xa;&#xa;self.GetOutputDataObject(0).DeepCopy( vtkOutputImage)"/>
        </Property>
        <Property name="UpdateExtentScript" id="7756.UpdateExtentScript" number_of_elements="1">
          <Element index="0" value=""/>
        </Property>
      </Proxy>
      <ExposedProperties>
        <Property name="CopyArrays" proxy_name="ProgrammableFilter1" exposed_name="Copy Arrays"/>
        <Property name="Input" proxy_name="ProgrammableFilter1" exposed_name="Input"/>
        <Property name="PythonPath" proxy_name="ProgrammableFilter1" exposed_name="Python Path"/>
        <Property name="InformationScript" proxy_name="ProgrammableFilter1" exposed_name="RequestInformation Script"/>
        <Property name="UpdateExtentScript" proxy_name="ProgrammableFilter1" exposed_name="RequestUpdateExtent Script"/>
        <Property name="Script" proxy_name="ProgrammableFilter1" exposed_name="Script"/>
      </ExposedProperties>
      <OutputPort name="Output" proxy="ProgrammableFilter1" port_index="0"/>
      <Hints>
        <ShowInMenu/>
      </Hints>
    </CompoundSourceProxy>
  </CustomProxyDefinition>
</CustomFilterDefinitions>
